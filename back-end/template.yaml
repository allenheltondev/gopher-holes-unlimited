AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Gopher Holes Unlimited
  SAM Template describing the way to implement a basic serverless service using a REST API and OAS
Parameters:
  TableName:
    Type: String
    Default: gopherholes

Globals:
  Function:
    Runtime: nodejs14.x
    Architectures:
      - arm64
    Tracing: Active
    Timeout: 3
    Handler: index.handler
    Layers:
      - !Ref DependencyLayer
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  Api:
    Cors:
      AllowMethods: "'DELETE,GET,POST,PUT'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"

Resources:
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: nodejs14.x
    Properties:
      LayerName: gopherholes-dependency-layer
      ContentUri: layers/
      CompatibleRuntimes:
        - nodejs14.x

  GopherHolesApi:
    Type: AWS::Serverless::Api
    Properties:
      TracingEnabled: false
      StageName: dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ../gopher-holes-unlimited-openapi.yaml

  AddGopherRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: AddGopherPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: 
                  - !GetAtt GopherHolesTable.Arn

  GetAllGophersRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: GetAllGophersPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource: 
                  - !Join [ "/", [ !GetAtt GopherHolesTable.Arn, "index/GSI1" ]]

  AddHoleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: AddHolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: 
                  - !GetAtt GopherHolesTable.Arn

  GetAllHolesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: GetAllHolesPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource: 
                  - !Join [ "/", [ !GetAtt GopherHolesTable.Arn, "index/GSI1" ]]

  AddGopherStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/add-gopher-status/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        AddGopherStatusEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}/statuses
            Method: POST
        AddGopherSNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref GopherAddedSNSTopic
            FilterPolicy:
              gopher-type: 
                - gopher

  GetGopherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/get-gopher/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        GetGopherEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}
            Method: GET

  UpdateGopherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/update-gopher/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt GopherHolesTable.Arn  
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        UpdateGopherEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}
            Method: PUT

  DeleteGopherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/delete-gopher/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:DeleteItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        DeleteGopherEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}
            Method: DELETE

  AddHoleStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/add-hole-status/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        AddHoleStatusEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes/{holeId}/statuses
            Method: POST

  GetHoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/get-hole/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        GetHoleEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes/{holeId}
            Method: GET

  UpdateHoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/update-hole/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt GopherHolesTable.Arn    
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        UpdateHoleEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes/{holeId}
            Method: PUT

  GopherHolesTableStream:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/table-stream/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref GopherAddedSNSTopic
            - Effect: Allow
              Action:
                - dynamodb:DescribeStream
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:ListStreams
              Resource: !Join [ '', [!GetAtt GopherHolesTable.Arn, '/stream/*']]
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt ProcessTableDeadLetterQueue.Arn
      Environment:
        Variables:
          GOPHER_ADDED_TOPIC_ARN: !Ref GopherAddedSNSTopic  

  GopherHolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      BillingMode: PAY_PER_REQUEST      
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  ProcessTableStream:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt GopherHolesTable.StreamArn
      FunctionName: !GetAtt GopherHolesTableStream.Arn
      StartingPosition: TRIM_HORIZON
      DestinationConfig:
        OnFailure:
          Destination: !GetAtt ProcessTableDeadLetterQueue.Arn
      BatchSize: 100
      MaximumBatchingWindowInSeconds: 5
      MaximumRecordAgeInSeconds: 604800
      MaximumRetryAttempts: 5

  ProcessTableDeadLetterQueue:
    Type: AWS::SQS::Queue
  
  GopherAddedSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: GopherAdded