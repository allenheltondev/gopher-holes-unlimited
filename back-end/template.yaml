AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Gopher Holes Unlimited
  SAM Template describing the way to implement a basic serverless service using a REST API and OAS
Parameters:
  TableName:
    Type: String
    Default: gopherholes

Globals:
  Function:
    Runtime: nodejs14.x
    Architectures:
      - arm64
    Tracing: Active
    Timeout: 3
    Handler: index.handler
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  Api:
    Cors:
      AllowMethods: "'DELETE,GET,POST,PUT'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"

Resources:
  GopherHolesApi:
    Type: AWS::Serverless::Api
    Properties:
      TracingEnabled: false
      StageName: dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ../gopher-holes-unlimited-openapi.yaml

  AddGopherRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: AddGopherPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: 
                  - !GetAtt GopherHolesTable.Arn

  AddGopherStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/add-gopher-status/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        AddGopherStatusEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}/statuses
            Method: POST
        AddGopherSNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref GopherAddedSNSTopic
            FilterPolicy:
              gopher-type: 
                - gopher

  GetAllGophersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/get-all-gophers/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource: !GetAtt GopherHolesTable.Arn
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        GetAllGophersEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers
            Method: GET

  GetGopherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/get-gopher/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        GetGopherEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}
            Method: GET

  UpdateGopherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/update-gopher/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt GopherHolesTable.Arn  
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        UpdateGopherEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}
            Method: PUT

  DeleteGopherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/delete-gopher/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:DeleteItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        DeleteGopherEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /gophers/{gopherId}
            Method: DELETE

  AddHoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/add-hole/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        AddHoleEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes
            Method: POST

  AddHoleStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/add-hole-status/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        AddHoleStatusEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes/{holeId}/statuses
            Method: POST

  GetAllHolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/get-all-holes/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        GetAllHolesEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes
            Method: GET

  GetHoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/get-hole/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt GopherHolesTable.Arn 
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        GetHoleEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes/{holeId}
            Method: GET

  UpdateHoleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/update-hole/
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt GopherHolesTable.Arn    
      Environment:
        Variables:
          TableName: !Ref TableName
      Events:
        UpdateHoleEvent:
          Type: Api
          Properties:
            RestApiId: !Ref GopherHolesApi
            Path: /holes/{holeId}
            Method: PUT

  GopherHolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      BillingMode: PAY_PER_REQUEST      
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S        
  
  GopherAddedSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: GopherAdded